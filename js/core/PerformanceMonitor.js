/**
 * PerformanceMonitor - –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
 * –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –º–µ—Ç—Ä–∏–∫–∏ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏
 */
class PerformanceMonitor {
    constructor() {
        this._initialized = false;
        this._metrics = {
            fps: 0,
            domOperations: 0,
            renderTime: 0,
            memoryUsage: 0,
            eventCount: 0,
            lastUpdate: Date.now()
        };
        
        this._fpsCounter = 0;
        this._fpsLastTime = Date.now();
        this._domOperationsCount = 0;
        this._renderStartTime = 0;
        
        // –ü—Ä–∏–≤—è–∑—ã–≤–∞–µ–º –º–µ—Ç–æ–¥—ã –∫ –∫–æ–Ω—Ç–µ–∫—Å—Ç—É
        this._updateFPS = this._updateFPS.bind(this);
        this._updateMetrics = this._updateMetrics.bind(this);
    }

    /**
     * –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è PerformanceMonitor
     */
    init() {
        if (this._initialized) return;
        
        // –°–æ–∑–¥–∞–µ–º UI –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –º–µ—Ç—Ä–∏–∫
        this._createPerformanceUI();
        
        // –ó–∞–ø—É—Å–∫–∞–µ–º –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥
        this._startMonitoring();
        
        // –ü–æ–¥–ø–∏—Å—ã–≤–∞–µ–º—Å—è –Ω–∞ —Å–æ–±—ã—Ç–∏—è –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è
        this._subscribeToEvents();
        
        this._initialized = true;
        console.log('‚úÖ PerformanceMonitor –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω');
    }

    /**
     * –°–æ–∑–¥–∞–Ω–∏–µ UI –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –º–µ—Ç—Ä–∏–∫
     */
    _createPerformanceUI() {
        // –°–æ–∑–¥–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –¥–ª—è –º–µ—Ç—Ä–∏–∫
        const container = document.createElement('div');
        container.id = 'performance-monitor';
        container.style.cssText = `
            position: fixed;
            top: 10px;
            right: 10px;
            background: rgba(0, 0, 0, 0.8);
            color: white;
            padding: 10px;
            border-radius: 5px;
            font-family: monospace;
            font-size: 12px;
            z-index: 10000;
            min-width: 200px;
            display: none;
        `;
        
        container.innerHTML = `
            <div style="margin-bottom: 5px; font-weight: bold;">üìä –ü—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å</div>
            <div>FPS: <span id="fps-value">0</span></div>
            <div>DOM –æ–ø–µ—Ä–∞—Ü–∏–π: <span id="dom-ops">0</span></div>
            <div>–í—Ä–µ–º—è —Ä–µ–Ω–¥–µ—Ä–∞: <span id="render-time">0</span>ms</div>
            <div>–ü–∞–º—è—Ç—å: <span id="memory-usage">0</span>MB</div>
            <div>–°–æ–±—ã—Ç–∏—è/—Å–µ–∫: <span id="event-count">0</span></div>
            <div style="margin-top: 5px; font-size: 10px; opacity: 0.7;">
                –ù–∞–∂–º–∏—Ç–µ F12 –¥–ª—è –ø–æ–∫–∞–∑–∞/—Å–∫—Ä—ã—Ç–∏—è
            </div>
        `;
        
        document.body.appendChild(container);
        
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –ø—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏ F12
        document.addEventListener('keydown', (e) => {
            if (e.key === 'F12') {
                container.style.display = container.style.display === 'none' ? 'block' : 'none';
            }
        });
        
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é –≤ —Ä–µ–∂–∏–º–µ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏
        if (window.location.hostname === 'localhost' || window.location.hostname === '127.0.0.1') {
            container.style.display = 'block';
        }
    }

    /**
     * –ó–∞–ø—É—Å–∫ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞
     */
    _startMonitoring() {
        // –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ FPS
        this._updateFPS();
        
        // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –º–µ—Ç—Ä–∏–∫ –∫–∞–∂–¥—ã–µ 100ms
        setInterval(this._updateMetrics, 100);
        
        // –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –ø–∞–º—è—Ç–∏
        if (performance.memory) {
            setInterval(() => {
                this._metrics.memoryUsage = Math.round(performance.memory.usedJSHeapSize / 1024 / 1024);
            }, 1000);
        }
    }

    /**
     * –ü–æ–¥–ø–∏—Å–∫–∞ –Ω–∞ —Å–æ–±—ã—Ç–∏—è –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è
     */
    _subscribeToEvents() {
        if (!window.eventBus) return;
        
        // –û—Ç—Å–ª–µ–∂–∏–≤–∞–µ–º –≤—Å–µ —Å–æ–±—ã—Ç–∏—è
        const originalEmit = window.eventBus.emit.bind(window.eventBus);
        window.eventBus.emit = (event, data, options) => {
            this._metrics.eventCount++;
            return originalEmit(event, data, options);
        };
        
        // –û—Ç—Å–ª–µ–∂–∏–≤–∞–µ–º DOM –æ–ø–µ—Ä–∞—Ü–∏–∏ —á–µ—Ä–µ–∑ DOM-–º–µ–Ω–µ–¥–∂–µ—Ä
        if (window.DOM) {
            const originalSetText = window.DOM.setText.bind(window.DOM);
            window.DOM.setText = (id, text) => {
                this._domOperationsCount++;
                return originalSetText(id, text);
            };
            
            const originalSetHTML = window.DOM.setHTML.bind(window.DOM);
            window.DOM.setHTML = (id, html) => {
                this._domOperationsCount++;
                return originalSetHTML(id, html);
            };
        }
    }

    /**
     * –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ FPS
     */
    _updateFPS() {
        const now = Date.now();
        this._fpsCounter++;
        
        if (now - this._fpsLastTime >= 1000) {
            this._metrics.fps = this._fpsCounter;
            this._fpsCounter = 0;
            this._fpsLastTime = now;
        }
        
        requestAnimationFrame(this._updateFPS);
    }

    /**
     * –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –º–µ—Ç—Ä–∏–∫
     */
    _updateMetrics() {
        // –û–±–Ω–æ–≤–ª—è–µ–º —Å—á–µ—Ç—á–∏–∫–∏
        this._metrics.domOperations = this._domOperationsCount;
        this._domOperationsCount = 0; // –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å—á–µ—Ç—á–∏–∫
        
        // –û–±–Ω–æ–≤–ª—è–µ–º UI
        this._updatePerformanceUI();
        
        // –õ–æ–≥–∏—Ä—É–µ–º –º–µ—Ç—Ä–∏–∫–∏ –≤ –∫–æ–Ω—Å–æ–ª—å –∫–∞–∂–¥—ã–µ 5 —Å–µ–∫—É–Ω–¥
        if (Date.now() - this._metrics.lastUpdate > 5000) {
            this._logMetrics();
            this._metrics.lastUpdate = Date.now();
        }
    }

    /**
     * –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ UI –º–µ—Ç—Ä–∏–∫
     */
    _updatePerformanceUI() {
        const fpsElement = document.getElementById('fps-value');
        const domOpsElement = document.getElementById('dom-ops');
        const renderTimeElement = document.getElementById('render-time');
        const memoryElement = document.getElementById('memory-usage');
        const eventElement = document.getElementById('event-count');
        
        if (fpsElement) {
            fpsElement.textContent = this._metrics.fps;
            fpsElement.style.color = this._getFPSColor(this._metrics.fps);
        }
        
        if (domOpsElement) {
            domOpsElement.textContent = this._metrics.domOperations;
        }
        
        if (renderTimeElement) {
            renderTimeElement.textContent = this._metrics.renderTime;
        }
        
        if (memoryElement) {
            memoryElement.textContent = this._metrics.memoryUsage;
        }
        
        if (eventElement) {
            eventElement.textContent = this._metrics.eventCount;
            this._metrics.eventCount = 0; // –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å—á–µ—Ç—á–∏–∫
        }
    }

    /**
     * –ü–æ–ª—É—á–∏—Ç—å —Ü–≤–µ—Ç –¥–ª—è FPS
     */
    _getFPSColor(fps) {
        if (fps >= 55) return '#00ff00'; // –ó–µ–ª–µ–Ω—ã–π - –æ—Ç–ª–∏—á–Ω–æ
        if (fps >= 45) return '#ffff00'; // –ñ–µ–ª—Ç—ã–π - —Ö–æ—Ä–æ—à–æ
        if (fps >= 30) return '#ff8800'; // –û—Ä–∞–Ω–∂–µ–≤—ã–π - —É–¥–æ–≤–ª–µ—Ç–≤–æ—Ä–∏—Ç–µ–ª—å–Ω–æ
        return '#ff0000'; // –ö—Ä–∞—Å–Ω—ã–π - –ø–ª–æ—Ö–æ
    }

    /**
     * –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –º–µ—Ç—Ä–∏–∫ –≤ –∫–æ–Ω—Å–æ–ª—å
     */
    _logMetrics() {
        console.log('üìä –ú–µ—Ç—Ä–∏–∫–∏ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏:', {
            fps: this._metrics.fps,
            domOperations: this._metrics.domOperations,
            renderTime: this._metrics.renderTime + 'ms',
            memoryUsage: this._metrics.memoryUsage + 'MB',
            eventCount: this._metrics.eventCount
        });
    }

    /**
     * –ù–∞—á–∞—Ç—å –∏–∑–º–µ—Ä–µ–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–∏ —Ä–µ–Ω–¥–µ—Ä–∞
     */
    startRenderTimer() {
        this._renderStartTime = performance.now();
    }

    /**
     * –ó–∞–≤–µ—Ä—à–∏—Ç—å –∏–∑–º–µ—Ä–µ–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–∏ —Ä–µ–Ω–¥–µ—Ä–∞
     */
    endRenderTimer() {
        if (this._renderStartTime > 0) {
            this._metrics.renderTime = Math.round(performance.now() - this._renderStartTime);
            this._renderStartTime = 0;
        }
    }

    /**
     * –ü–æ–ª—É—á–∏—Ç—å —Ç–µ–∫—É—â–∏–µ –º–µ—Ç—Ä–∏–∫–∏
     */
    getMetrics() {
        return { ...this._metrics };
    }

    /**
     * –°–æ–∑–¥–∞—Ç—å –æ—Ç—á–µ—Ç –æ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏
     */
    generatePerformanceReport() {
        return {
            timestamp: new Date().toISOString(),
            metrics: this.getMetrics(),
            recommendations: this._generateRecommendations()
        };
    }

    /**
     * –ì–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏
     */
    _generateRecommendations() {
        const recommendations = [];
        
        if (this._metrics.fps < 30) {
            recommendations.push('‚ö†Ô∏è –ù–∏–∑–∫–∏–π FPS - –æ–ø—Ç–∏–º–∏–∑–∏—Ä—É–π—Ç–µ —Ä–µ–Ω–¥–µ—Ä–∏–Ω–≥');
        }
        
        if (this._metrics.domOperations > 100) {
            recommendations.push('‚ö†Ô∏è –ú–Ω–æ–≥–æ DOM –æ–ø–µ—Ä–∞—Ü–∏–π - –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ batch –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è');
        }
        
        if (this._metrics.renderTime > 16) {
            recommendations.push('‚ö†Ô∏è –ú–µ–¥–ª–µ–Ω–Ω—ã–π —Ä–µ–Ω–¥–µ—Ä–∏–Ω–≥ - –æ–ø—Ç–∏–º–∏–∑–∏—Ä—É–π—Ç–µ UI –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è');
        }
        
        if (this._metrics.memoryUsage > 50) {
            recommendations.push('‚ö†Ô∏è –í—ã—Å–æ–∫–æ–µ –ø–æ—Ç—Ä–µ–±–ª–µ–Ω–∏–µ –ø–∞–º—è—Ç–∏ - –ø—Ä–æ–≤–µ—Ä—å—Ç–µ —É—Ç–µ—á–∫–∏');
        }
        
        if (recommendations.length === 0) {
            recommendations.push('‚úÖ –ü—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –≤ –Ω–æ—Ä–º–µ');
        }
        
        return recommendations;
    }
}

// –°–æ–∑–¥–∞–µ–º –≥–ª–æ–±–∞–ª—å–Ω—ã–π —ç–∫–∑–µ–º–ø–ª—è—Ä PerformanceMonitor
window.performanceMonitor = new PerformanceMonitor();
