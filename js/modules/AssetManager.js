/**
 * AssetManager - —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∞–∫—Ç–∏–≤–∞–º–∏
 * –û—Ç–≤–µ—á–∞–µ—Ç –∑–∞ –ø–æ–∫—É–ø–∫—É, –ø—Ä–æ–¥–∞–∂—É –∏ —Ä–∞—Å—á–µ—Ç—ã –∞–∫—Ç–∏–≤–æ–≤
 */
class AssetManager {
    constructor() {
        this._initialized = false;
        this._selectedAsset = null;
        this._currentAssetType = 'stocks';
        
        // –ü—Ä–∏–≤—è–∑—ã–≤–∞–µ–º –º–µ—Ç–æ–¥—ã –∫ –∫–æ–Ω—Ç–µ–∫—Å—Ç—É
        this._handleAssetChanged = this._handleAssetChanged.bind(this);
        this._handleCashChanged = this._handleCashChanged.bind(this);
    }

    /**
     * –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è AssetManager
     */
    init() {
        if (this._initialized) return;
        
        // –ü–æ–¥–ø–∏—Å—ã–≤–∞–µ–º—Å—è –Ω–∞ —Å–æ–±—ã—Ç–∏—è
        this._subscribeToEvents();
        
        // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π
        this._initEventHandlers();
        
        this._initialized = true;
        console.log('‚úÖ AssetManager –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω');
    }

    /**
     * –ü–æ–¥–ø–∏—Å–∫–∞ –Ω–∞ —Å–æ–±—ã—Ç–∏—è
     */
    _subscribeToEvents() {
        const { eventBus, AppEvents } = window;
        
        eventBus.on(AppEvents.ASSET_CHANGED, this._handleAssetChanged);
        eventBus.on(AppEvents.CASH_CHANGED, this._handleCashChanged);
    }

    /**
     * –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ —Å–æ–±—ã—Ç–∏–π
     */
    _initEventHandlers() {
        // –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –∫–Ω–æ–ø–æ–∫ –ø–æ–∫—É–ø–∫–∏/–ø—Ä–æ–¥–∞–∂–∏
        if (window.DOM) {
            // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –Ω–æ–≤–æ–π –ª–æ–≥–∏–∫–∏
            window.DOM.addEventListener('main-buy-btn', 'click', () => this.openBuyModal());
            window.DOM.addEventListener('main-sell-btn', 'click', () => this.openSellModal());
        }
    }

    // === –ú–ï–¢–û–î–´ –î–õ–Ø –ü–û–ö–£–ü–ö–ò –ê–ö–¢–ò–í–û–í ===

    /**
     * –û—Ç–∫—Ä—ã—Ç—å –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –ø–æ–∫—É–ø–∫–∏
     */
    openBuyModal() {
        if (!window.DOM) return;
        
        const modal = window.DOM.get('buy-modal');
        if (modal) {
            // –ò—Å–ø–æ–ª—å–∑—É–µ–º —Å—Ç–∞—Ä—ã–π —Å–ø–æ—Å–æ–± –æ—Ç–∫—Ä—ã—Ç–∏—è –¥–ª—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏
            modal.classList.add('active');
            this._updateBuyModalWallet();
            
            // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –Ω–æ–≤–æ–π –ª–æ–≥–∏–∫–µ
            if (window.animationManager) {
                window.animationManager.showNotification('üÜï AssetManager –∞–∫—Ç–∏–≤–µ–Ω! –£–ª—É—á—à–µ–Ω–Ω–∞—è –ª–æ–≥–∏–∫–∞ –ø–æ–∫—É–ø–∫–∏ –∞–∫—Ç–∏–≤–æ–≤', 'info');
            }
            console.log('üéØ AssetManager: –û—Ç–∫—Ä—ã—Ç–æ –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –ø–æ–∫—É–ø–∫–∏');
        }
    }

    /**
     * –ó–∞–∫—Ä—ã—Ç—å –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –ø–æ–∫—É–ø–∫–∏
     */
    closeBuyModal() {
        if (!window.DOM) return;
        
        const modal = window.DOM.get('buy-modal');
        if (modal) {
            // –ò—Å–ø–æ–ª—å–∑—É–µ–º —Å—Ç–∞—Ä—ã–π —Å–ø–æ—Å–æ–± –∑–∞–∫—Ä—ã—Ç–∏—è –¥–ª—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏
            modal.classList.remove('active');
        }
    }

    /**
     * –û–±–Ω–æ–≤–∏—Ç—å –±–∞–ª–∞–Ω—Å –≤ –º–æ–¥–∞–ª—å–Ω–æ–º –æ–∫–Ω–µ –ø–æ–∫—É–ø–∫–∏
     */
    _updateBuyModalWallet() {
        if (!window.DOM || !window.gameState) return;
        
        const walletElement = window.DOM.get('modal-wallet-amount');
        if (walletElement) {
            walletElement.textContent = window.gameState.cash;
        }
    }

    /**
     * –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ –≤ –º–æ–¥–∞–ª—å–Ω–æ–º –æ–∫–Ω–µ –ø–æ–∫—É–ø–∫–∏
     */
    _initBuyModalHandlers() {
        if (!window.DOM) return;
        
        // –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –∫–∞—Ç–µ–≥–æ—Ä–∏–π –∞–∫—Ç–∏–≤–æ–≤
        const categoryCards = document.querySelectorAll('#buy-modal .category-card');
        categoryCards.forEach(card => {
            card.addEventListener('click', (e) => {
                const category = card.dataset.category;
                this._showAssetCategory(category);
            });
        });

        // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∑–∞–∫—Ä—ã—Ç–∏—è
        const closeBtn = document.querySelector('#buy-modal .close-btn');
        if (closeBtn) {
            closeBtn.addEventListener('click', () => this.closeBuyModal());
        }
    }

    /**
     * –ü–æ–∫–∞–∑–∞—Ç—å –∞–∫—Ç–∏–≤—ã –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
     */
    _showAssetCategory(category) {
        // –ó–¥–µ—Å—å –±—É–¥–µ—Ç –ª–æ–≥–∏–∫–∞ –ø–æ–∫–∞–∑–∞ –∞–∫—Ç–∏–≤–æ–≤ –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º
        console.log('–ü–æ–∫–∞–∑–∞—Ç—å –∫–∞—Ç–µ–≥–æ—Ä–∏—é:', category);
    }

    // === –ú–ï–¢–û–î–´ –î–õ–Ø –ü–†–û–î–ê–ñ–ò –ê–ö–¢–ò–í–û–í ===

    /**
     * –û—Ç–∫—Ä—ã—Ç—å –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –ø—Ä–æ–¥–∞–∂–∏
     */
    openSellModal() {
        if (!window.DOM) return;
        
        const modal = window.DOM.get('sell-modal');
        if (modal) {
            modal.style.display = 'block';
            this._currentAssetType = 'stocks';
            this._updateAssetTypeButtons();
            this._loadAssetList();
            
            // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –Ω–æ–≤–æ–π –ª–æ–≥–∏–∫–µ
            if (window.animationManager) {
                window.animationManager.showNotification('üÜï AssetManager –∞–∫—Ç–∏–≤–µ–Ω! –£–ª—É—á—à–µ–Ω–Ω–∞—è –ª–æ–≥–∏–∫–∞ –ø—Ä–æ–¥–∞–∂–∏ –∞–∫—Ç–∏–≤–æ–≤', 'info');
            }
            console.log('üéØ AssetManager: –û—Ç–∫—Ä—ã—Ç–æ –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –ø—Ä–æ–¥–∞–∂–∏');
        }
    }

    /**
     * –ó–∞–∫—Ä—ã—Ç—å –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –ø—Ä–æ–¥–∞–∂–∏
     */
    closeSellModal() {
        if (!window.DOM) return;
        
        const modal = window.DOM.get('sell-modal');
        if (modal) {
            modal.style.display = 'none';
        }
        
        this._selectedAsset = null;
        this._hideAllAssetInfo();
        this._disableSellButton();
    }

    /**
     * –û–±–Ω–æ–≤–∏—Ç—å –∫–Ω–æ–ø–∫–∏ –≤—ã–±–æ—Ä–∞ —Ç–∏–ø–∞ –∞–∫—Ç–∏–≤–∞
     */
    _updateAssetTypeButtons() {
        const buttons = document.querySelectorAll('.asset-type-btn');
        buttons.forEach(btn => {
            btn.classList.toggle('active', btn.dataset.type === this._currentAssetType);
        });
    }

    /**
     * –ó–∞–≥—Ä—É–∑–∏—Ç—å —Å–ø–∏—Å–æ–∫ –∞–∫—Ç–∏–≤–æ–≤ –¥–ª—è –ø—Ä–æ–¥–∞–∂–∏
     */
    _loadAssetList() {
        if (!window.gameState) return;
        
        const assets = window.gameState.data.asset;
        
        // –§–∏–ª—å—Ç—Ä—É–µ–º –∞–∫—Ç–∏–≤—ã –ø–æ —Ç–∏–ø—É
        const filteredAssets = assets.filter(asset => {
            if (this._currentAssetType === 'stocks') {
                return ['MYT4U', 'ON2U', 'OK4U', 'GRO4US', '2BIGPOWER', 'CD'].includes(asset.name);
            }
            return asset.type === this._currentAssetType;
        });
        
        this._renderAssetList(filteredAssets);
    }

    /**
     * –û—Ç—Ä–∏—Å–æ–≤–∞—Ç—å —Å–ø–∏—Å–æ–∫ –∞–∫—Ç–∏–≤–æ–≤
     */
    _renderAssetList(assets) {
        const listElement = this._getAssetListElement();
        if (!listElement) return;
        
        if (assets.length === 0) {
            listElement.innerHTML = '<div class="asset-item">–ù–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∞–∫—Ç–∏–≤–æ–≤ –¥–ª—è –ø—Ä–æ–¥–∞–∂–∏</div>';
            return;
        }
        
        const html = assets.map(asset => {
            let displayText = '';
            if (asset.type === 'stocks') {
                displayText = `${asset.name} (${asset.quantity} —à—Ç. –ø–æ $${asset.price})`;
            } else {
                displayText = `${asset.name} - $${asset.value}`;
            }
            
            return `<div class="asset-item" data-asset-id="${asset.id}">
                <span>${displayText}</span>
            </div>`;
        }).join('');
        
        listElement.innerHTML = html;
        
        // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–ª–∏–∫–∞
        const assetItems = listElement.querySelectorAll('.asset-item');
        assetItems.forEach(item => {
            item.addEventListener('click', () => {
                const assetId = item.dataset.assetId;
                this._selectAsset(assetId);
            });
        });
    }

    /**
     * –í—ã–±—Ä–∞—Ç—å –∞–∫—Ç–∏–≤ –¥–ª—è –ø—Ä–æ–¥–∞–∂–∏
     */
    _selectAsset(assetId) {
        if (!window.gameState) return;
        
        const asset = window.gameState.data.asset.find(a => a.id === assetId);
        if (!asset) return;
        
        this._selectedAsset = asset;
        this._showAssetInfo(asset);
        this._enableSellButton();
    }

    /**
     * –ü–æ–∫–∞–∑–∞—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∞–∫—Ç–∏–≤–µ
     */
    _showAssetInfo(asset) {
        this._hideAllAssetInfo();
        
        const infoElement = this._getAssetInfoElement();
        if (!infoElement) return;
        
        let infoHtml = '';
        if (asset.type === 'stocks') {
            infoHtml = `
                <h3>${asset.name}</h3>
                <p>–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ: ${asset.quantity} —à—Ç.</p>
                <p>–¶–µ–Ω–∞ –∑–∞ –∞–∫—Ü–∏—é: $${asset.price}</p>
                <p>–û–±—â–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å: $${asset.quantity * asset.price}</p>
                <div class="sell-price-input">
                    <label>–¶–µ–Ω–∞ –ø—Ä–æ–¥–∞–∂–∏ –∑–∞ –∞–∫—Ü–∏—é:</label>
                    <input type="number" class="sell-price" value="${asset.price}">
                </div>
            `;
        } else {
            infoHtml = `
                <h3>${asset.name}</h3>
                <p>–°—Ç–æ–∏–º–æ—Å—Ç—å: $${asset.value}</p>
                <div class="sell-price-input">
                    <label>–¶–µ–Ω–∞ –ø—Ä–æ–¥–∞–∂–∏:</label>
                    <input type="number" class="sell-price" value="${asset.value}">
                </div>
            `;
        }
        
        infoElement.innerHTML = infoHtml;
        infoElement.style.display = 'block';
    }

    /**
     * –°–∫—Ä—ã—Ç—å –≤—Å—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∞–∫—Ç–∏–≤–∞—Ö
     */
    _hideAllAssetInfo() {
        const infoElements = [
            'selected-stock-info',
            'selected-realestate-info',
            'selected-business-info',
            'selected-preciousmetals-info',
            'selected-misc-info'
        ];
        
        infoElements.forEach(id => {
            const element = window.DOM?.get(id);
            if (element) {
                element.style.display = 'none';
            }
        });
    }

    /**
     * –í–∫–ª—é—á–∏—Ç—å –∫–Ω–æ–ø–∫—É –ø—Ä–æ–¥–∞–∂–∏
     */
    _enableSellButton() {
        const sellBtn = window.DOM?.get('sell-asset-btn');
        if (sellBtn) {
            sellBtn.disabled = false;
        }
    }

    /**
     * –û—Ç–∫–ª—é—á–∏—Ç—å –∫–Ω–æ–ø–∫—É –ø—Ä–æ–¥–∞–∂–∏
     */
    _disableSellButton() {
        const sellBtn = window.DOM?.get('sell-asset-btn');
        if (sellBtn) {
            sellBtn.disabled = true;
        }
    }

    /**
     * –ü—Ä–æ–¥–∞—Ç—å –≤—ã–±—Ä–∞–Ω–Ω—ã–π –∞–∫—Ç–∏–≤
     */
    sellSelectedAsset() {
        if (!this._selectedAsset || !window.gameState) return;
        
        const asset = this._selectedAsset;
        const sellPriceInput = document.querySelector('.sell-price');
        const sellPrice = sellPriceInput ? Number(sellPriceInput.value) : 0;
        
        if (sellPrice <= 0) {
            alert('–í–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—É—é —Ü–µ–Ω—É –ø—Ä–æ–¥–∞–∂–∏');
            return;
        }
        
        // –†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ–º –≤—ã—Ä—É—á–∫—É
        let revenue = 0;
        if (asset.type === 'stocks') {
            revenue = asset.quantity * sellPrice;
        } else {
            revenue = sellPrice;
        }
        
        // –î–æ–±–∞–≤–ª—è–µ–º –¥–µ–Ω—å–≥–∏
        window.gameState.addCash(revenue, `–ü—Ä–æ–¥–∞–∂–∞ ${asset.name}`);
        
        // –£–¥–∞–ª—è–µ–º –∞–∫—Ç–∏–≤
        window.gameState.removeAsset(asset.id);
        
        // –ó–∞–∫—Ä—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ
        this.closeSellModal();
        
        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–±—ã—Ç–∏–µ
        if (window.eventBus) {
            window.eventBus.emit(window.AppEvents.ASSET_REMOVED, {
                asset: asset,
                revenue: revenue,
                sellPrice: sellPrice
            });
        }
    }

    // === –í–°–ü–û–ú–û–ì–ê–¢–ï–õ–¨–ù–´–ï –ú–ï–¢–û–î–´ ===

    /**
     * –ü–æ–ª—É—á–∏—Ç—å —ç–ª–µ–º–µ–Ω—Ç —Å–ø–∏—Å–∫–∞ –∞–∫—Ç–∏–≤–æ–≤
     */
    _getAssetListElement() {
        const listMap = {
            'stocks': 'stock-list',
            'realestate': 'realestate-list',
            'business': 'business-list',
            'preciousmetals': 'preciousmetals-list',
            'misc': 'misc-list'
        };
        
        const listId = listMap[this._currentAssetType];
        return listId ? window.DOM?.get(listId) : null;
    }

    /**
     * –ü–æ–ª—É—á–∏—Ç—å —ç–ª–µ–º–µ–Ω—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ–± –∞–∫—Ç–∏–≤–µ
     */
    _getAssetInfoElement() {
        const infoMap = {
            'stocks': 'selected-stock-info',
            'realestate': 'selected-realestate-info',
            'business': 'selected-business-info',
            'preciousmetals': 'selected-preciousmetals-info',
            'misc': 'selected-misc-info'
        };
        
        const infoId = infoMap[this._currentAssetType];
        return infoId ? window.DOM?.get(infoId) : null;
    }

    // === –û–ë–†–ê–ë–û–¢–ß–ò–ö–ò –°–û–ë–´–¢–ò–ô ===

    _handleAssetChanged(data) {
        // –û–±–Ω–æ–≤–ª—è–µ–º —Å–ø–∏—Å–∫–∏ –∞–∫—Ç–∏–≤–æ–≤ –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏
        if (data.operation === 'add' || data.operation === 'remove') {
            this._loadAssetList();
        }
    }

    _handleCashChanged(data) {
        // –û–±–Ω–æ–≤–ª—è–µ–º –±–∞–ª–∞–Ω—Å –≤ –º–æ–¥–∞–ª—å–Ω—ã—Ö –æ–∫–Ω–∞—Ö
        this._updateBuyModalWallet();
    }

    // === –ü–£–ë–õ–ò–ß–ù–´–ï –ú–ï–¢–û–î–´ ===

    /**
     * –†–∞—Å—Å—á–∏—Ç–∞—Ç—å –æ–±—â—É—é —Å—Ç–æ–∏–º–æ—Å—Ç—å –∞–∫—Ç–∏–≤–æ–≤
     */
    calculateTotalAssets() {
        if (!window.gameState) return 0;
        
        return window.gameState.calculateTotalAssets();
    }

    /**
     * –ü–æ–ª—É—á–∏—Ç—å –∞–∫—Ç–∏–≤—ã –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω–æ–≥–æ —Ç–∏–ø–∞
     */
    getAssetsByType(type) {
        if (!window.gameState) return [];
        
        return window.gameState.data.asset.filter(asset => asset.type === type);
    }

    /**
     * –ü–æ–ª—É—á–∏—Ç—å –≤—Å–µ –∞–∫—Ç–∏–≤—ã
     */
    getAllAssets() {
        if (!window.gameState) return [];
        
        return window.gameState.data.asset;
    }
}

// –°–æ–∑–¥–∞–µ–º –≥–ª–æ–±–∞–ª—å–Ω—ã–π —ç–∫–∑–µ–º–ø–ª—è—Ä AssetManager
window.assetManager = new AssetManager();
