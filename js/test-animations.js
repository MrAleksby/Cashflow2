/**
 * –¢–µ—Å—Ç–æ–≤—ã–π —Ñ–∞–π–ª –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏ –∞–Ω–∏–º–∞—Ü–∏–π –∏ —É–ª—É—á—à–µ–Ω–∏–π UX
 */
document.addEventListener('DOMContentLoaded', function() {
    console.log('=== –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∞–Ω–∏–º–∞—Ü–∏–π –∏ UX ===');
    
    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º AnimationManager
    if (window.animationManager) {
        window.animationManager.init();
        console.log('‚úÖ AnimationManager –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω');
        
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
        setTimeout(() => {
            window.animationManager.showNotification('–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ Cashflow!', 'success', 4000);
        }, 1000);
        
    } else {
        console.log('‚ùå AnimationManager –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω');
    }
    
    // –°–æ–∑–¥–∞–µ–º –ø–∞–Ω–µ–ª—å –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∞–Ω–∏–º–∞—Ü–∏–π
    const testPanel = document.createElement('div');
    testPanel.style.cssText = `
        position: fixed;
        bottom: 20px;
        right: 20px;
        background: rgba(0, 0, 0, 0.8);
        color: white;
        padding: 15px;
        border-radius: 10px;
        font-family: monospace;
        font-size: 12px;
        z-index: 10000;
        min-width: 200px;
    `;
    
    testPanel.innerHTML = `
        <div style="margin-bottom: 10px; font-weight: bold;">üé® –¢–µ—Å—Ç –∞–Ω–∏–º–∞—Ü–∏–π</div>
        <button id="test-notification" style="margin: 2px; padding: 5px 8px; font-size: 10px;">–£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ</button>
        <button id="test-bounce" style="margin: 2px; padding: 5px 8px; font-size: 10px;">Bounce</button>
        <button id="test-shake" style="margin: 2px; padding: 5px 8px; font-size: 10px;">Shake</button>
        <button id="test-pulse" style="margin: 2px; padding: 5px 8px; font-size: 10px;">Pulse</button>
        <button id="test-modal" style="margin: 2px; padding: 5px 8px; font-size: 10px;">–ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ</button>
    `;
    
    document.body.appendChild(testPanel);
    
    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –∫–Ω–æ–ø–æ–∫ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
    document.getElementById('test-notification').addEventListener('click', () => {
        const types = ['success', 'error', 'warning', 'info'];
        const messages = [
            '–û–ø–µ—Ä–∞—Ü–∏—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!',
            '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞!',
            '–í–Ω–∏–º–∞–Ω–∏–µ! –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –¥–∞–Ω–Ω—ã–µ.',
            '–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ.'
        ];
        
        const randomIndex = Math.floor(Math.random() * types.length);
        window.animationManager.showNotification(
            messages[randomIndex], 
            types[randomIndex]
        );
    });
    
    document.getElementById('test-bounce').addEventListener('click', () => {
        const cashElement = document.getElementById('top-cash-amount');
        if (cashElement && window.animationManager) {
            window.animationManager.bounce(cashElement);
        }
    });
    
    document.getElementById('test-shake').addEventListener('click', () => {
        const cashElement = document.getElementById('top-cash-amount');
        if (cashElement && window.animationManager) {
            window.animationManager.shake(cashElement);
        }
    });
    
    document.getElementById('test-pulse').addEventListener('click', () => {
        const paydayBtn = document.getElementById('payday-btn');
        if (paydayBtn && window.animationManager) {
            window.animationManager.pulse(paydayBtn, 2000);
        }
    });
    
    document.getElementById('test-modal').addEventListener('click', () => {
        // –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤–æ–µ –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ
        const modal = document.createElement('div');
        modal.className = 'modal';
        modal.style.cssText = `
            position: fixed;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            background: white;
            padding: 30px;
            border-radius: 10px;
            box-shadow: 0 10px 30px rgba(0, 0, 0, 0.3);
            z-index: 1000;
            display: none;
            max-width: 400px;
        `;
        
        modal.innerHTML = `
            <h3 style="margin-top: 0; color: #333;">–¢–µ—Å—Ç–æ–≤–æ–µ –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ</h3>
            <p style="color: #666;">–≠—Ç–æ –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –∞–Ω–∏–º–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ —Å backdrop —ç—Ñ—Ñ–µ–∫—Ç–æ–º.</p>
            <button onclick="this.parentElement.parentElement.remove()" 
                    style="background: #4CAF50; color: white; border: none; padding: 10px 20px; border-radius: 5px; cursor: pointer;">
                –ó–∞–∫—Ä—ã—Ç—å
            </button>
        `;
        
        document.body.appendChild(modal);
        window.animationManager.showModal(modal);
    });
    
    // –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–º–∏ –º–æ–¥—É–ª—è–º–∏
    if (window.gameState && window.animationManager) {
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏—è—Ö
        const originalAddCash = window.gameState.addCash.bind(window.gameState);
        window.gameState.addCash = function(amount, description) {
            originalAddCash(amount, description);
            window.animationManager.showNotification(
                `–î–æ–±–∞–≤–ª–µ–Ω–æ $${amount}`, 
                'success', 
                2000
            );
        };
        
        const originalRemoveCash = window.gameState.removeCash.bind(window.gameState);
        window.gameState.removeCash = function(amount, description) {
            const success = originalRemoveCash(amount, description);
            if (success) {
                window.animationManager.showNotification(
                    `–°–ø–∏—Å–∞–Ω–æ $${amount}`, 
                    'info', 
                    2000
                );
            } else {
                window.animationManager.showNotification(
                    '–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤!', 
                    'error', 
                    3000
                );
            }
        };
        
        const originalAddIncome = window.gameState.addIncome.bind(window.gameState);
        window.gameState.addIncome = function(income) {
            originalAddIncome(income);
            window.animationManager.showNotification(
                `–î–æ–±–∞–≤–ª–µ–Ω –¥–æ—Ö–æ–¥: ${income.name}`, 
                'success', 
                2000
            );
        };
        
        const originalAddExpense = window.gameState.addExpense.bind(window.gameState);
        window.gameState.addExpense = function(expense) {
            originalAddExpense(expense);
            window.animationManager.showNotification(
                `–î–æ–±–∞–≤–ª–µ–Ω —Ä–∞—Å—Ö–æ–¥: ${expense.name}`, 
                'warning', 
                2000
            );
        };
    }
    
    // –ê–Ω–∏–º–∞—Ü–∏—è –ø—Ä–∏ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–∏ —ç–∫—Ä–∞–Ω–æ–≤
    if (window.animationManager) {
        const navItems = document.querySelectorAll('.nav-item');
        navItems.forEach(item => {
            item.addEventListener('click', (e) => {
                // –î–æ–±–∞–≤–ª—è–µ–º –Ω–µ–±–æ–ª—å—à—É—é –∞–Ω–∏–º–∞—Ü–∏—é –∫ –∫–Ω–æ–ø–∫–µ
                window.animationManager.bounce(item);
            });
        });
    }
    
    // –ê–Ω–∏–º–∞—Ü–∏—è –ø—Ä–∏ –Ω–∞–≤–µ–¥–µ–Ω–∏–∏ –Ω–∞ –∫–∞—Ä—Ç–æ—á–∫–∏
    if (window.animationManager) {
        const cards = document.querySelectorAll('.category-card, .action-card');
        cards.forEach(card => {
            card.addEventListener('mouseenter', () => {
                card.style.transform = 'translateY(-5px) scale(1.02)';
            });
            
            card.addEventListener('mouseleave', () => {
                card.style.transform = 'translateY(0) scale(1)';
            });
        });
    }
    
    // –ê–Ω–∏–º–∞—Ü–∏—è –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
    if (window.animationManager) {
        setTimeout(() => {
            const elements = document.querySelectorAll('.block, .action-btn');
            elements.forEach((element, index) => {
                setTimeout(() => {
                    window.animationManager.fadeIn(element);
                }, index * 100);
            });
        }, 500);
    }
    
    console.log('=== –¢–µ—Å—Ç –∞–Ω–∏–º–∞—Ü–∏–π –∑–∞–≤–µ—Ä—à–µ–Ω ===');
    console.log('üí° –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –ø–∞–Ω–µ–ª—å –≤ –ø—Ä–∞–≤–æ–º –Ω–∏–∂–Ω–µ–º —É–≥–ª—É –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è');
});
